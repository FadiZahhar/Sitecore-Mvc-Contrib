<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Go" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildProjectDirectory)\Build.tasks" />
  <Import Project="$(MSBuildProjectDirectory)\Sitecore.Mvc.Contrib.versions.targets" />
  
  <PropertyGroup>
    <Configuration Condition="$(Configuration) == ''">Release</Configuration>
    <ProjectRoot>$(MSBuildProjectDirectory)\..</ProjectRoot>
    <PackagingPath>$(MSBuildProjectDirectory)\packaging</PackagingPath>
    <ArtifactsPath>$(ProjectRoot)\artifacts\$(Configuration)</ArtifactsPath>
    <AnalysisResultsPath>$(ArtifactsPath)\CodeAnalysis</AnalysisResultsPath>
    <BuildResultsPath>$(ArtifactsPath)\Build</BuildResultsPath>
    <TestResultsPath>$(ArtifactsPath)\TestResults</TestResultsPath>
    <PackageResultsPath>$(ArtifactsPath)\Packages</PackageResultsPath>
    <NuGetToolsPath>$(ProjectRoot)\.nuget</NuGetToolsPath>
    <NuGetExePath>$(NuGetToolsPath)\nuget.exe</NuGetExePath>
    <ToolsPath>$(ProjectRoot)\tools</ToolsPath>
    <NunitPath>$(ToolsPath)\nunit</NunitPath>
  </PropertyGroup>

  <UsingTask AssemblyFile="$(ToolsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.NUnit" />
  
  <PropertyGroup>
    <!-- Build number is of the format (CurrentYear - VersionStartYear + 1)(2 digit month)(2 digit day) -->
    <BuildDate>$([MSBuild]::Add(1, $([MSBuild]::Subtract($([System.DateTime]::Now.Year), $(VersionStartYear)))))$([System.DateTime]::Now.ToString("MMdd"))</BuildDate>
    <Revision Condition="$(BUILD_NUMBER) != ''">$(BUILD_NUMBER)</Revision>
    <Revision Condition="$(BUILD_NUMBER) == ''">0</Revision>
    <PrereleaseTagWithSeparator Condition="$(PRERELEASE) != '' And $(BuildQuality) != ''">-$(BuildQuality)-$([System.DateTime]::Now.ToString("yyMMdd"))</PrereleaseTagWithSeparator>
    <Version>$(MajorVersion).$(MinorVersion).$(PatchVersion)</Version>
    <FileVersion>$(MajorVersion).$(MinorVersion).$(BuildDate).$(Revision)</FileVersion>
    <PackageVersion>$(MajorVersion).$(MinorVersion).$(PatchVersion)$(PrereleaseTagWithSeparator)</PackageVersion>
  </PropertyGroup>

  <Target Name="Clean">
    <RemoveDir Directories="$(ArtifactsPath)"  />
  </Target>

  <Target Name="Init" DependsOnTargets="Clean">
    <MakeDir Directories="$(ArtifactsPath)" Condition="!Exists('$(ArtifactsPath)')" />
    <MakeDir Directories="$(AnalysisResultsPath)" Condition="!Exists('$(AnalysisResultsPath)')" />
    <MakeDir Directories="$(PackageResultsPath)" Condition="!Exists('$(PackageResultsPath)')" />        
    <MakeDir Directories="$(TestResultsPath)" Condition="!Exists('$(TestResultsPath)')" />
  </Target>

  <Target Name="Build" DependsOnTargets="Init">
    <MSBuild Projects="$(ProjectRoot)\Sitecore.Mvc.Contrib.sln"
             Targets="Build"
             Properties="Configuration=$(Configuration);OutDir=$(BuildResultsPath)" />
  </Target>
  
  <Target Name="RunCodeAnalysis" DependsOnTargets="Init" Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v11.0\CodeAnalysis\fxcoptask.dll')">
    <ItemGroup>
      <AnalysisProjects Include="$(ProjectRoot)\src\Sitecore.Mvc.Contrib\Sitecore.Mvc.Contrib.csproj" />
    </ItemGroup>

    <MSBuild Projects="%(AnalysisProjects.Identity)"
             Targets="ReBuild"
             Properties="RunCodeAnalysis=true;Configuration=$(Configuration);OutDir=$(AnalysisResultsPath)" />

    <!-- Remove the build artifacts -->
    <ItemGroup>
      <FilesToDelete Include="$(AnalysisResultsPath)\*.dll;$(AnalysisResultsPath)\*.pdb"/>
    </ItemGroup>

    <Delete Files="@(FilesToDelete)" />
  </Target>
  
  
  <!--<ItemGroup>
    <RegexTransform Include="$(ProjectRoot)\src\Common\CommonVersionInfo.cs">
      <Find>AssemblyVersion\("\d+\.\d+\.\d+"\)</Find>
      <ReplaceWith>AssemblyVersion("$(Version)")</ReplaceWith>
    </RegexTransform>
    <RegexTransform Include="$(ProjectRoot)\src\Common\CommonVersionInfo.cs">
      <Find>AssemblyFileVersion\("\d+\.\d+\.\d+\.\d+"\)</Find>
      <ReplaceWith>AssemblyFileVersion("$(FileVersion)")</ReplaceWith>
    </RegexTransform>
    <RegexTransform Include="$(ProjectRoot)\src\Common\CommonVersionInfo.cs">
      <Find>AssemblyInformationalVersion\("\d+\.\d+\.\d+(-\w+\d*(-\d+)?)?"\)</Find>
      <ReplaceWith>AssemblyInformationalVersion("$(PackageVersion)")</ReplaceWith>
    </RegexTransform>
  </ItemGroup>-->

  <!--<Target Name="UpdateVersion">
    <RegexTransform Items="@(RegexTransform)" />
  </Target>-->

  <Target Name="RunUnitTests" DependsOnTargets="Build">
    <CreateItem Include="$(BuildResultsPath)\*.Test.dll">
      <Output TaskParameter="Include" ItemName="TestAssembly" />
    </CreateItem>
    
    <NUnit
      ToolPath="$(NunitPath)"
      DisableShadowCopy="true"
      Assemblies="@(TestAssembly)"
      OutputXmlFile="$(TestResultsPath)\TestResults.xml"
      ExcludeCategory="Acceptance;Database;Integration;Smoke" />    
  </Target>
  
  <Target Name="RunTests" DependsOnTargets="RunUnitTests; "> <!-- Add other test types as depends here -->
  </Target>

  <Target Name="StdPackage" DependsOnTargets="Build">
    <Exec 
        Command="$(NuGetExePath) pack $(PackagingPath)\Sitecore.Mvc.Contrib.nuspec -Verbosity detailed -Version $(Version) -OutputDirectory $(PackageResultsPath)" />
  </Target>
  
  <Target Name="Go" DependsOnTargets="RunCodeAnalysis; Build; RunTests; StdPackage">
  </Target>

  <Target Name="BuildCmd" DependsOnTargets="RunCodeAnalysis; Build; RunUnitTests;">
  </Target>
  
</Project>